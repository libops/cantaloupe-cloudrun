name: Terraform Apply
on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - main
    types:
      - closed
env:
  TF_VAR_project: ${{ secrets.GCLOUD_PROJECT }}
jobs:
  terraform:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true }}
    name: Run Terraform Apply
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: 1.5.7

      - id: "auth"
        uses: google-github-actions/auth@c200f3691d83b41bf9bbd8638997a462592937ed # v2
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_OIDC_POOL }}
          service_account: ${{ secrets.GSA }}
          token_format: "access_token"

      - uses: google-github-actions/setup-gcloud@e427ad8a34f8676edf47cf7d7925499adf3eb74f # v2
        with:
          version: "latest"

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCLOUD_PROJECT }}
          gcloud config set disable_prompts true

      - name: terraform apply
        env:
          TF_VAR_project: ${{ secrets.GCLOUD_PROJECT }}
        run: |
          terraform init -upgrade > terraform.log 2>&1
          terraform apply -auto-approve  > terraform.log 2>&1

      - name: Upload terraform log
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: terraform.log-${{ github.sha }}
          path: ./terraform.log
          overwrite: true

      - name: cleanup
        if: ${{ always() }}
        run: rm terraform.log
